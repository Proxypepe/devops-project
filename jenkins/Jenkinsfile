pipeline {
    agent none

    environment {   
        REGESTRY_URL = "dockerregistry.local:5000"
        DOCKER_IMAGE_NAME = "flask-app-devops"
        TAG = "monitoring"
    }

    stages {
        

        stage("Test configurations") {
            agent { label 'slave' }
            steps {
                sh 'ansible-lint ansible/'
            }
        }

        stage("Working with code") {
            agent { label 'slave' }
            steps {
                sh 'flake8 src/'
            }     
        }

        stage('Build image') {
            agent { label 'master' }
            steps {
                script {
                    def version = readFile(file: '.build-version')
                    println(version)
                    sh "docker build -t ${REGESTRY_URL}/${DOCKER_IMAGE_NAME}:${TAG}-${version} src/"
                }
            }
        }
 
        stage('Push image') {
            agent { label 'master' }
            steps {
                script {
                    def version = readFile(file: '.build-version')
                    println(version)
                    sh "docker push ${REGESTRY_URL}/${DOCKER_IMAGE_NAME}:${TAG}-${version}"
                }
            }
        }

        stage('Update flask chart version') {
            agent { label 'master' }
            steps {
                sh "pwd"
                script {
                    def version = readFile(file: '.build-version')
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                            dir("final-project-helm") {
                                sh "git config user.email sasha_golovin_95@bk.ru"
                                sh "git config user.name Proxypepe"
                                sh "git pull origin HEAD:main"
                                sh "ls; pwd"
                                sh "sed -i 's/monitoring.*/monitoring-${version}/' flask/values.yaml"
                                sh "git add ."
                                sh "git commit -m 'Done by Jenkins Job, build verion: ${version}'"
                                sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/final-project-helm.git HEAD:main --force"
                            }
                        }
                    }
                }
            }
        }
    }
}
